Further Advanced Python Sept 2023
=================================
Toby Dussek

9:30  start
11:00 coffee
12:30 lunch
3:00  tea break until 3:15
4:30  end

repo https://github.com/onionmccabbage/furtherAdvancedPythonSept2023
course website (for recordings)
      https://s3.eu-west-1.amazonaws.com/neueda.conygre.com/Sites/Beyond_A_Python/site/index.html

Monday
> welcome
> we will be installing additional packages as needed
> design patterns (and anti-patterns)
> decorator pattern (using @)
> factory and facade patterns
> command pattern
> after lunch review exercise
> proxy pattern
> observables and subscribers
> we will need Jupyter Notebooks later in the week

Tuesday
> where we got to (summary of design patterns)
> state pattern
> RxPY https://rxpy.readthedocs.io/en/latest/index.html
       https://rxmarbles.com/
> concurrency and parallel code
> the GIL...
  see https://realpython.com/python-gil/
      https://wiki.python.org/moin/GlobalInterpreterLock
> overview: thread functions and thread classes
> thread locks/rlocks/semaphores
> semaphore quantity (also print)
> after lunch review exercise
> daemon threads
> legacy examples

Wednesday
> access to recordings
> custom thread decorator
  final look at @ decorator to make classes and methods thread safe (using Lock)
> multiprocessing
  AWS, data-access
  we can also use gpu  - often use 'cuda' or similar
> performance and timing
> profiling with @profile and cProfile
> after lunch review exercise
> why use a thread or a process
- generators
- prepare for Thursday ...

Thursday
- options:
  - use Anaconda
  - pip install notebook
  - just use existing VSCode (or similar)
  - use cloud
- Python for Data Analysis
  we will need:
  - jupyter notebooks
  - numpy
  - pandas
  - matplotlib
	The easiest way to get all the bits and bobs is to use Anaconda
  Data sources (csv, xlsx, text, db, url...)
- using Jupyter notebooks (via Jupyter, Anaconda, via VS Code plugin, or online or...)
   you can 'pip install jupyter' then start it with 'python -m notebook'
   then you will also need to pip install numpy, pandas etc.
- numpy and data structures: the arange and array 
- pandas: series and data-frame
  NaN, creating stuctures, analysis (stats)
- data vizualisation with matplotlib
- data cleansing and preparation
- descriptive statistics
- handling files and remote data
- after lunch review exercise
- careful - exporting a notebook does not add 'print' statements

Friday
- quick look at machine learning
- statistical anylsys and correlation
  REMEMBER: correlation does NOT prove CAUSATION
> review of microservices (inc. multi threading)
> Flask: running as dev or prod server (performance and security)
  to run as a debug server: flask --app my_flask.py --debug run
  or else debug=True in the app declaration
  see https://flask.palletsprojects.com/en/2.3.x/
> after lunch review exercise

- end of course feedback
  easy retro https://easyretro.io/publicboard/NTDqkkm6utgJFD9cdBrdb4sI6n72/c4747d9c-0a34-4ce6-b301-072f9616d487
  also internal feedback
  https://apps.powerapps.com/play/17579985-153c-4727-b1f4-8b53e48b5e72?tenantId=92e84ceb-fbfd-47ab-be52-080c6b87953f&Type=ILT&ID=LZU1502707&OID=508290&Title=Python%20-%20Beyond%20Advanced&Owner=Sachin%20Srivastava%20B

where to go next
   https://www.geeksforgeeks.org/python-design-patterns/
   https://python-patterns.guide/
   https://rxpy.readthedocs.io/en/latest/ 
   https://pypi.org/project/memory-profiler/

https://pynative.com/python-exercises-with-solutions/
https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/
https://www.practicepython.org/exercises/
